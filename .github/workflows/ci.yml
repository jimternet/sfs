name: CI Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'
        
    - name: Setup Gradle Wrapper
      run: |
        gradle wrapper || echo "Gradle wrapper generation failed, continuing with build"
      
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Build with Gradle
      run: ./gradlew build -x test
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: build/libs/

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'
        
    # OWASP Dependency Check
    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      env:
        JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
      with:
        project: 'sfs'
        path: '.'
        format: 'HTML,JSON'
        args: >
          --enableRetired
          --enableExperimental
          --noupdate
          --suppression suppression.xml
        mount: |
          /opt/hostedtoolcache/Java_Zulu_jdk/17.0.15-6/x64:/usr/lib/jvm/java-17-openjdk-amd64
        
    - name: Upload OWASP Dependency Check results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-check-report
        path: reports/
        
  codeql-analysis:
    runs-on: ubuntu-latest
    needs: build-and-test
    permissions:
      actions: read
      contents: read
      security-events: write
      
    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'zulu'
        
    - name: Build project for CodeQL
      run: ./gradlew build -x test || gradle build -x test
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
        
  spotbugs-scan:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'zulu'
        
    - name: Run SpotBugs
      run: |
        # Add SpotBugs plugin to build.gradle if not present
        if ! grep -q "spotbugs" build.gradle; then
          echo "plugins { id 'com.github.spotbugs' version '5.0.14' apply false }" > temp.gradle
          cat build.gradle >> temp.gradle
          mv temp.gradle build.gradle
          echo "apply plugin: 'com.github.spotbugs'" >> build.gradle
        fi
        ./gradlew spotbugsMain || gradle spotbugsMain || echo "SpotBugs analysis completed with findings"
        
    - name: Upload SpotBugs results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: spotbugs-results
        path: build/reports/spotbugs/